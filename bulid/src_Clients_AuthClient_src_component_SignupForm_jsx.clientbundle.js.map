{"version":3,"file":"src_Clients_AuthClient_src_component_SignupForm_jsx.clientbundle.js","mappings":"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","sources":["webpack://newgen/./src/Clients/AuthClient/src/component/SignupForm.jsx","webpack://newgen/./src/Clients/AuthClient/src/js/signup.js","webpack://newgen/./src/Clients/LandingpageClient/src/components/Navbar.jsx","webpack://newgen/./src/Clients/LandingpageClient/src/js/click.js","webpack://newgen/./src/Clients/AuthClient/src/css/loginform.css?094e","webpack://newgen/./src/Clients/LandingpageClient/src/css/Navbar.css?091a"],"sourcesContent":["import { useEffect, useRef, useState} from 'react'\nimport {Link, useNavigate,Outlet } from 'react-router-dom'\nimport { useSelector} from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faUser,faLock} from '@fortawesome/free-solid-svg-icons'\nimport img1 from '../../../../../public/img/wave.png'\nimport img2 from '../../../../../public/img/bg.png'\nimport img3 from '../../../../../public/img/avatar.png'\nimport signup from '../js/signup'\nimport '../css/loginform.css'\nimport Navbar from '../../../LandingpageClient/src/components/Navbar'\nconst LoginForm = ({footerRef}) => {\n\tconst User = useSelector((state) => state.auth)\n\tuseEffect(() =>{\n\t\tfooterRef.current.style.display='none'\n\n\t\treturn ()=>{\n\t\t\tfooterRef.current.style.display='revert'\n\t\t}\n\t})\n    const oneRef= useRef(null)\n\tconst userRef = useRef(null)\n\tconst usernameRef= useRef(null)\n\tconst twoRef = useRef(null)\n\tconst nameRef = useRef(null)\n\tconst firstNameRef = useRef(null)\n\tconst passRef = useRef(null)\n\tconst pwdRef=useRef(null)\n\tconst passwordRef = useRef(null)\n\tconst [username,setUsername] = useState('')\n\tconst [password,setPassword] = useState('')\n\tconst [firstname,setFirstName] = useState('')\n\tconst [Error, setError] = useState('')\n\tconst navigate = useNavigate()\n\t\n    return (\n    <>\n\t<Navbar/>\n\t<div className='auth'>\n\t\t<img className=\"auth-wave\" src={img1}/>\n\t\t<div className=\"auth-container\">\n\t\t\t<div className=\"auth-img\">\n\t\t\t\t<img src={img2}/>\n\t\t\t</div>\n\t\t\t<div className=\"auth-login-content\">\n\t\t\t\t<div className='auth-form'>\n\t\t\t\t\t<img src={img3} />\n\t\t\t\t\t<h2 className=\"auth-title\">Welcome</h2>\n\t\t\t\t<p id={Error? 'error' : 'noerror'}>*{Error}</p>\n\t\t\t\t\t<div className=\"auth-input-div one\" ref={oneRef}>\n\t\t\t\t\t\t<div className=\"auth-i\" ref={userRef}>\n\t\t\t\t\t\t\t<FontAwesomeIcon className='auth-ii' icon={faUser}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"auth-div\">\n\t\t\t\t\t\t\t\t<h5 ref={usernameRef}>Username</h5>\n\t\t\t\t\t\t\t\t<input type=\"text\" \n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\tvalue={username} onChange={(e) => setUsername(e.target.value)} \n\t\t\t\t\t\t\t\tonBlur={()=>{oneRef.current.style.borderBottom='2px solid #2d386e';userRef.current.style.color='#2d386e';!username ? usernameRef.current.textContent='Username':''}} \n\t\t\t\t\t\t\t\tonFocus={(e)=>{oneRef.current.style.borderBottom='2px solid #38d39f';usernameRef.current.textContent='';userRef.current.style.color='#38d39f'}} \n\t\t\t\t\t\t\t\tclassName=\"auth-input\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"auth-input-div\" ref={twoRef}>\n\t\t\t\t\t\t<div className=\"auth-i\" ref={nameRef}>\n\t\t\t\t\t\t\t<FontAwesomeIcon className='auth-ii' icon={faUser}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"auth-div\">\n\t\t\t\t\t\t\t\t<h5 ref={firstNameRef}>First Name</h5>\n\t\t\t\t\t\t\t\t<input type=\"text\" \n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\tvalue={firstname} \n\t\t\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)} \n\t\t\t\t\t\t\t\tonBlur={()=>{twoRef.current.style.borderBottom='2px solid #2d386e';nameRef.current.style.color='#2d386e';!username ? firstNameRef.current.textContent='Firstname':''}} \n\t\t\t\t\t\t\t\tonFocus={(e)=>{twoRef.current.style.borderBottom='2px solid #38d39f';firstNameRef.current.textContent='';nameRef.current.style.color='#38d39f'}} \n\t\t\t\t\t\t\t\tclassName=\"auth-input\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"auth-input-div pass\" ref={passRef}>\n\t\t\t\t\t\t<div className=\"auth-i\" ref={pwdRef}> \n\t\t\t\t\t\t\t<FontAwesomeIcon className='auth-ii' icon={faLock}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"auth-div\">\n\t\t\t\t\t\t\t<h5 ref={passwordRef}>Password</h5>\n\t\t\t\t\t\t\t<input type=\"password\" \n\t\t\t\t\t\t\tvalue={password} \n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)} \n\t\t\t\t\t\t\tonBlur={()=>{passRef.current.style.borderBottom='2px solid #2d386e';pwdRef.current.style.color='#2d386e';!password ? passwordRef.current.textContent='Password': ''}} \n\t\t\t\t\t\t\tonFocus={(e)=>{passRef.current.style.borderBottom='2px solid #38d39f';passwordRef.current.textContent='';pwdRef.current.style.color='#38d39f'}} \n\t\t\t\t\t\t\tclassName=\"auth-input\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Link className='auth-a' to={\"/auth/login\"}>Already have account?Login</Link>\n\t\t\t\t\t<input type=\"submit\" \n\t\t\t\t\t\t\tonClick={e => signup(e,{username,firstname,password,setUsername,setFirstName,setPassword},navigate,setError,usernameRef,firstNameRef,passwordRef)} \n\t\t\t\t\t\t\tclassName=\"auth-btn\" \n\t\t\t\t\t\t\tvalue=\"Signup\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t<Outlet/>\n    </>\n    )\n}\n\nexport default LoginForm\n","import axios from 'axios'\nconst signup = (\n  e,\n  loginData,\n  navigate,\n  setError,\n  usernameRef,\n  firstNameRef,\n  passwordRef\n) => {\n  e.preventDefault()\n  axios({\n    method: 'POST',\n    url: '/signup',\n    data: {\n      username: loginData.username,\n      firstname: loginData.firstname,\n      password: loginData.password,\n    },\n  }).then((res) => {\n    if (res.status === 200) {\n      navigate('/auth/login')\n    } else {\n      console.log('renderererrere')\n      loginData.setUsername('')\n      loginData.setFirstName('')\n      loginData.setPassword('')\n      firstNameRef.current.textContent = 'First Name'\n      usernameRef.current.textContent = 'Username'\n      passwordRef.current.textContent = 'Password'\n      setError(res.data.error)\n    }\n  })\n}\n\nexport default signup\n","import { useEffect, useState} from 'react'\nimport { Link, Navigate, useNavigate} from 'react-router-dom'\nimport { useSelector,useDispatch } from 'react-redux'\nimport img from '../../../../../public/img/newgen.png'\nimport '../css/Navbar.css'\nimport click from '../js/click'\nimport {setLoggedIn} from '../../../../redux/slices/authSlice'\nimport { setUser } from '../../../../redux/slices/authSlice'\nimport { useRef } from 'react'\n\nconst logout = (e,dispatch,navigate) =>{\n    e.preventDefault()\n    dispatch(setLoggedIn())\n    navigate('/')\n}\n\nconst Navbar = () => {\n\n    const [toggle,setToggle] = useState('');\n    const User = useSelector((state) => state.auth)\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const dropbtnref = useRef(null);\n    useEffect(()=>{\n        const userData = JSON.parse(localStorage.getItem('userData'))\n        if(User.username==='' && userData){\n            dispatch(setUser({username:userData.username,firstname:userData.firstname}))\n            dispatch(setLoggedIn())\n        }\n        dropbtnref.current.addEventListener('click',()=>{\n            navigate('/blog/new')\n        })\n    },[])\n    return (\n        <nav className='lpage-nav'>\n            <div className=\"lpage-logo lpage-navbarLeft\">\n                <img id=\"lpage-navbarCompanyLogo\" src={img} alt='img'/>\n            </div>\n            <Link to={'/'} className='lpage-a' id=\"lpage-home\" >Home</Link>\n            <div className={`lpage-navbarRight${toggle}`}>\n                {   \n                    /*!User.isLoggedIn ? */<Link to={'/auth/signup'} className='lpage-a' id=\"lpage-about\">Signup</Link>/*:''*/\n                }\n                {\n                    /*User.profileCreated ?*/\n                    <div className=\"dropdown\" >\n                            <span className=\"dropbtn\" id='btn-blog' ref={dropbtnref}>Blogs</span>\n                            <div className=\"dropdown-content\" id='drp-blog' >\n                                <Link to={'/blog/new'}>Create New</Link>\n                                <Link to={'/blog/bulkupload'} >Bulk Upload</Link>\n                            </div>\n                    </div> /*: ''*/\n                }\n                {   \n                    /*!User.isLoggedIn ? */<Link to={'/auth/login'} className='lpage-a' id=\"lpage-login\">Login</Link> /*: ''*/\n                }\n                {\n                   /* User.isLoggedIn ?*/\n                        <div className=\"dropdown\" id='dropdown-btn' >\n                            <span className=\"dropbtn\" id='lpage-profile'>VP</span>\n                            <div className=\"dropdown-content\">\n                                <Link to={'/username'} className='lpage-a'>Profile</Link>\n                                <Link to={'/dashboard'} className='lpage-a' >Dashboard</Link>\n                                <Link to={'/'} className='lpage-a' onClick={e => logout(e,dispatch,navigate)}>Logout</Link>\n                            </div>\n                        </div> /*: ''*/\n                }\n            </div>\n            <div className=\"lpage-navbarButton\" onClick={e=>{click(e,toggle,setToggle)}}>\n                <span id='lpage-span1'></span>\n                <span id='lpage-span2'></span>\n                <span id='lpage-span3'></span>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","const click = (e, toggle, setToggle) => {\n  e.preventDefault()\n  if (toggle === '') {\n    setToggle('Active')\n  } else {\n    setToggle('')\n  }\n}\n\nexport default click\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}