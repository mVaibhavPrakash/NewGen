{"version":3,"file":"src_Clients_ProfileClient_src_components_Profile_jsx.clientbundle.js","mappings":"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","sources":["webpack://newgen/./src/Clients/LandingpageClient/src/components/Navbar.jsx","webpack://newgen/./src/Clients/LandingpageClient/src/js/click.js","webpack://newgen/./src/Clients/ProfileClient/src/components/Profile.jsx","webpack://newgen/./src/Clients/ProfileClient/src/js/profile.js","webpack://newgen/./src/Clients/LandingpageClient/src/css/Navbar.css?091a","webpack://newgen/./src/Clients/ProfileClient/src/css/profile.css?b37e"],"sourcesContent":["import { useEffect, useState} from 'react'\nimport { Link, Navigate, useNavigate} from 'react-router-dom'\nimport { useSelector,useDispatch } from 'react-redux'\nimport img from '../../../../../public/img/newgen.png'\nimport '../css/Navbar.css'\nimport click from '../js/click'\nimport {setLoggedIn} from '../../../../redux/slices/authSlice'\nimport { setUser } from '../../../../redux/slices/authSlice'\n\nconst logout = (e,dispatch,navigate) =>{\n    e.preventDefault()\n    dispatch(setLoggedIn())\n    navigate('/')\n}\n\nconst Navbar = () => {\n\n    const [toggle,setToggle] = useState('');\n    const User = useSelector((state) => state.auth)\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    useEffect(()=>{\n        const userData = JSON.parse(localStorage.getItem('userData'))\n        if(User.username==='' && userData){\n            dispatch(setUser({username:userData.username,firstname:userData.firstname}))\n            dispatch(setLoggedIn())\n        }\n    },[])\n    return (\n        <nav className='lpage-nav'>\n            <div className=\"lpage-logo lpage-navbarLeft\">\n                <img id=\"lpage-navbarCompanyLogo\" src={img} alt='img'/>\n            </div>\n            <a className='lpage-a' id=\"lpage-home\">Home</a>\n            <div className={`lpage-navbarRight${toggle}`}>\n                {   \n                    /*!User.isLoggedIn ? */<Link to={'/auth/signup'} className='lpage-a' id=\"lpage-about\">Signup</Link>/*:''*/\n                }\n                {\n                    /*User.profileCreated ?*/\n                    <div className=\"dropdown\" >\n                            <span className=\"dropbtn\" id='btn-blog'>Blogs</span>\n                            <div className=\"dropdown-content\" id='drp-blog'>\n                                <Link to={'/blog/new'}>Create New</Link>\n                                <Link to={'/dashboard'} >Bulk Upload</Link>\n                            </div>\n                    </div> /*: ''*/\n                }\n                {   \n                    /*!User.isLoggedIn ? */<Link to={'/auth/login'} className='lpage-a' id=\"lpage-login\">Login</Link> /*: ''*/\n                }\n                {\n                   /* User.isLoggedIn ?*/\n                        <div className=\"dropdown\" id='dropdown-btn' >\n                            <span className=\"dropbtn\" id='lpage-profile'>VP</span>\n                            <div className=\"dropdown-content\">\n                                <Link to={'/username'} className='lpage-a'>Profile</Link>\n                                <Link to={'/dashboard'} className='lpage-a' >Dashboard</Link>\n                                <Link to={'/'} className='lpage-a' onClick={e => logout(e,dispatch,navigate)}>Logout</Link>\n                            </div>\n                        </div> /*: ''*/\n                }\n            </div>\n            <div className=\"lpage-navbarButton\" onClick={e=>{click(e,toggle,setToggle)}}>\n                <span id='lpage-span1'></span>\n                <span id='lpage-span2'></span>\n                <span id='lpage-span3'></span>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar;\n","const click = (e, toggle, setToggle) => {\n  e.preventDefault()\n  if (toggle === '') {\n    setToggle('Active')\n  } else {\n    setToggle('')\n  }\n}\n\nexport default click\n","import { useState } from 'react';\nimport Navbar from '../../../LandingpageClient/src/components/Navbar';\nimport '../css/profile.css'\nimport img1 from '../../../../../public/img/wave.png'\nimport EditProfile from '../js/profile';\n\nconst Profile= ({footerRef}) => {\n    const [Status,setStatus] = useState('Edit');\n    const [Name,setName] = useState('')\n    const [UserName,setUserName] = useState('')\n    const [DOB,setDOB] = useState('')\n    const [Bio,setBio] = useState('')\n    const [About,setAbout] = useState('')\n    return (\n        <>  \n        <Navbar/>\n        <div className='auth'>\n\t\t    <img className=\"auth-wave\" src={img1}/>\n        </div>\n        <div className='profile'>\n            <div id='h2div'>\n                <h2>User Profile</h2>\n                <button onClick={e =>{e.preventDefault();EditProfile({Name,UserName,DOB,Bio,About},setStatus)}} disabled={Status === 'Edit' ? false : true}>{Status}</button>\n            </div>\n            <div id='profile-content'>\n                <div id='profile-d'>\n                    <p>You can change your profile here, click on Edit option to edit</p>\n                </div>\n                <div className='profile-content-div'>\n                    <h3>Name</h3>\n                    <p style={{wordBreak:'break-word'}}>Your name appears on your Profile page, as your byline, and in your responses. It is a required field. </p>\n                    <textarea placeholder='Ex:- Aman' id='profile-textarea' name='fullname' value={Name} onChange={e => setName(e.target.value)}/>\n                </div>\n                <div className='profile-content-div'>\n                    <h3>Username</h3>\n                    <p style={{wordBreak:'break-word'}}>Your username appears on your Profile page, as your byline, and in your responses. It is a required field.</p>\n                    <textarea placeholder='Ex:- striver' id='profile-textarea' name='username' value={UserName} onChange={e =>setUserName(e.target.value)}/>\n                </div>\n                <div className=\"profile-content-div\">\n                    <h3>Short Bio</h3>\n                    <p style={{wordBreak:'break-word'}}>Your short bio appears on your Profile and next to your stories. Max 160 characters. </p>\n                    <textarea placeholder='Enter bio details' id='profile-textarea-seo-desc' name='bio' value={Bio} onChange={e => setBio(e.target.value)}/>\n                </div>\n                <div className=\"profile-content-div\">\n                    <h3>D.O.B</h3>\n                    <p style={{wordBreak:'break-word'}}>Date of Birth</p>\n                    <p><input type='date' id='profile-input' name='dob' value={DOB} onChange={e => setDOB(e.target.value)}/></p>\n                </div>\n                <div className=\"profile-content-div\">\n                    <h3>About you</h3>\n                    <p style={{wordBreak:'break-word'}}>This page should tell your readers more about you and explain the benefits of reading your work.</p>\n                    <textarea placeholder='Enter details here' id='profile-textarea' name='about' value={About} onChange={e => setAbout(e.target.value)}/>\n                </div>\n                <div className=\"profile-content-div\">\n                    <h3>Tech Stack</h3>\n                    <p style={{wordBreak:'break-word'}}>This will tell your readers about your area of expertise. Enter comma(,)seperated values</p>\n                    <textarea placeholder='Enter tech stack, comma (,) seperated' id='profile-textarea' name='about' value={About} onChange={e => setAbout(e.target.value)}/>\n                </div>\n                <div className=\"profile-content-div\">\n                    <h3>Social</h3>\n                    <p style={{wordBreak:'break-word'}}>Twitter Profile</p>\n                    <textarea placeholder='https://twitter.com/' id='profile-textarea' name='about' value={About} onChange={e => setAbout(e.target.value)}/>\n                    <p style={{wordBreak:'break-word'}}>LinkedIn Profile</p>\n                    <textarea placeholder='https://linkedin.com/' id='profile-textarea' name='about' value={About} onChange={e => setAbout(e.target.value)}/>\n                    <p style={{wordBreak:'break-word'}}>Stackoverflow Profile</p>\n                    <textarea placeholder='https://stackoverflow.com/' id='profile-textarea' name='about' value={About} onChange={e => setAbout(e.target.value)}/>\n                    <p style={{wordBreak:'break-word'}}>Github Profile</p>\n                    <textarea placeholder='https://github.com/' id='profile-textarea' name='about' value={About} onChange={e => setAbout(e.target.value)}/>\n                    <p style={{wordBreak:'break-word'}}>Personal Website</p>\n                    <textarea placeholder='https://xyz.com/' id='profile-textarea' name='about' value={About} onChange={e => setAbout(e.target.value)}/>\n                    <p style={{wordBreak:'break-word'}}>Youtube Channel</p>\n                    <textarea placeholder='https://youtube.com/' id='profile-textarea' name='about'  value={About} onChange={e => setAbout(e.target.value)}/>\n                </div>\n                <div className=\"profile-content-div\">\n                    <h3>Email Address(Not changeable)</h3>\n                    <p>{}</p>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default Profile;\n","import axios from 'axios'\n\nconst EditProfile = (obj, setStatus) => {\n  axios\n    .post({\n      method: 'POST',\n      url: '/signup',\n      data: obj,\n    })\n    .then((res) => {\n      setStatus('Saved')\n      if (res.status === 200) {\n        setStatus('Saved')\n        const time = setTimeout(() => {\n          setStatus('Edit')\n        }, 500)\n        clearTimeout(time)\n      } else {\n        setStatus('Try Again')\n        const time = setTimeout(() => {\n          setStatus('Edit')\n        }, 500)\n        clearTimeout(time)\n      }\n    })\n}\n\nexport default EditProfile\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};"],"names":[],"sourceRoot":""}